name: Manual rollback Action

on:
  workflow_dispatch:
    inputs:
      releaseLatestVersion:
        description: 'Latest release tag version'
        required: true
      environment:
        type: choice
        description: environment
        options:
          - staging
          - production

jobs:
  validateVersion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get version
        run: |
          echo "ACTUAL_VERSION=$(sed '2!d' src/main/kotlin/com/example/${{ github.event.inputs.environment }}/file.yaml | grep -o '[ˆ1-9]\+')" >> $GITHUB_ENV
          echo "LATEST_VERSION=$(echo "${{ github.event.inputs.releaseLatestVersion }}" | grep -o '[ˆ1-9]\+')" >> $GITHUB_ENV
      - name: Validate
        run: |
         if [[ `expr $ACTUAL_VERSION - 1` != $LATEST_VERSION ]]; then 
           exit 1
         fi

  createPullRequest:
    runs-on: ubuntu-latest
    needs: [validateVersion]
    if: ${{ success() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create commit and Push
        run: |
          git config user.name "${{ secrets.GIT_NAME }}"
          git config user.email "${{ secrets.GIT_EMAIL }}"
          git config user.password "${{ secrets.GIT_TOKEN }}"
          git checkout -b "ci-${{ github.run_id }}"   
          sed -i -re '2s/  tag: [0-9]+\.[0-9]+\.[0-9]+/  tag: ${{ github.event.inputs.releaseLatestVersion }}/' src/main/kotlin/com/example/${{ github.event.inputs.environment }}/file.yaml
          git add -A && git commit -m '[${{ github.event.inputs.environment }}] Change image to version ${{ github.event.inputs.releaseLatestVersion }}'
          git push --set-upstream origin "ci-${{ github.run_id }}"

      - name: create pull request
        run: gh pr create -B main -H ci-${{ github.run_id }} --title  "[${{ github.event.inputs.environment }}] Change image to version ${{ github.event.inputs.releaseLatestVersion }}"  --body 'Change image version to version ${{ github.event.inputs.releaseLatestVersion }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
